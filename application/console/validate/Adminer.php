<?phpnamespace app\console\validate;use think\Cache;use think\Validate;class Adminer extends Validate{    protected $rule = [        'login'=> [            'require',            'unique'=>'adminer',            ],        'name'=> 'require',        'password'=> 'require',        'password_confirm'=> 'require',    ];    protected $message = [        'login.require' => '用户名不能为空',        'login.unique' => '用户名已被注册',        'name.require' => '姓名不能为空',        'password.require' => '密码不能为空',        'password_confirm.require' => '确认密码不能为空',    ];    protected $scene = [        //添加        'add'=>[            'login','name','password','password_confirm'        ],        //编辑        'edit'=>[            'login','name',        ],    ];    /**     * 判断发送间隔     * @param $value     * @param $rule     * @return bool|string     */    protected function checkSendCodeInterval($value, $rule)    {        $cache_key = "interval_{$rule}_{$value}";        if(Cache::has($cache_key))            return "请".config('cache_time.sms_code_interval')."s后重新发送";        return true;    }    // 自定义验证短信验证    protected function checkSMSCodeByMobile($value, $rule, $data)    {        $mobile = $data['phone'];        $key = "{$rule}_{$mobile}";        if (cache($key)==false)            return '验证码已过期,请重新获取';        return ((string)$value == cache($key)) ? true:'验证码错误';    }    //验证用户id是否存在    protected function checkUserExist($value,$rule)    {        $user = new User();        $res = $user->where(['id'=>$value])->value('id');        if (!$res)            return $rule;        return true;    }    protected function checkUserPhoneExist($value)    {        $user = new User();        $res = $user->where(['phone'=>$value])->value('id');        if (!$res)            return '当前手机号未绑定任何用户';        return true;    }    // 自定义验证短信验证    protected function checkUserPhone($value, $rule='origin_phone', $data)    {        $user = new User();        $res = $user->where(['id'=>$value,'phone'=>$data[$rule]])->value('id');        if (!$res)            return '输入的原手机号不是账号的绑定手机号';        return true;    }    // 自定义验证短信验证    protected function checkOriginSMSCodeByMobile($value, $rule, $data)    {        $mobile = $data['origin_phone'];        $key = $rule.$mobile;        if (cache($key)==false)            return '验证码已过期,请重新获取';        return ((string)$value == cache($key)) ? true:'用户身份异常,无权修改数据';    }}