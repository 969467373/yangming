<?phpnamespace app\common\model;use think\Exception;use think\Session;//管理员class Adminer extends BaseModel{    // 登录方法    static function login($login,$pass)    {        //参数异常,返回false        if (empty($login)||empty($pass))            throw new Exception('缺少账号或密码');        //根据账号获取管理员对象        $adminer = self::get(['login'=>$login]);        if (!$adminer)            throw new Exception('无此账号');        //hash密码比对验证        if (password_verify($pass, $adminer->pass)) {            //保存session            Session::set('admin_user_id', $adminer['id']);            session::set('admin_user_name', $adminer['name']);            Session::set('admin_user_type', $adminer['type']);            return true;        }        throw new Exception('密码错误');    }    public function setPassAttr($value, $data)    {        //密码哈希加密        return password_hash($value, PASSWORD_DEFAULT);    }    //根据管理员id获取对应权限组下的功能ids数组    public function getAuthConsoleIds($id)    {        $console_ids = $this->alias('u')            ->join('console_auth_group ag','u.auth_group_id=ag.id')            ->where('u.id',$id)            ->value('ag.console_ids');        $data = unserialize($console_ids);        return $data;    }    //管理员列表    function consoleGetListByWhere($where)    {        $list = $this->where($where)            ->field('id,login,name')            ->paginate(20, false, ['query' => request()->get()]);        return $list;    }    //新增    function add($data){        $this->allowField(true)->save($data);    }    //修改    function edit($data){        if(empty($data['pass']))            unset($data['pass']);        $this->isUpdate(true)->allowField(true)->save($data);    }}