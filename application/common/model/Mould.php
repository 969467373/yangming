<?phpnamespace app\common\model;use think\Db;use think\Exception;use app\common\model\Process;use app\common\model\TaskProcess;use think\Session;//绑扎胎具class Mould extends BaseModel{    function getMouldList()    {        $process = new Process();        $list =  $this->alias('m')            ->join('task t','t.id=m.task_id','left')            ->join('task_flow f','f.task_id=m.task_id','left')            ->field([                'm.id',                'm.title',                'm.status',                'm.task_id',                't.title as task_title',//任务名称                'f.process_id',            ])            ->order('id asc')            ->select();        //进行的工序        foreach ($list as &$item)        {            $item['process']=[];            $item['type']= 1 ;            if ($item['task_id'] != 0){//任务id不为0                //判断是否同时进行两个工序                if(strstr($item['process_id'],',')){                    //工序类型                    $item['type']=2;                    //分开两个工序的id                    $process_arr = explode(',',$item['process_id']);                    $p1 = $process->where(['id'=>$process_arr[0]])->value('title');                    $p2 = $process->where(['id'=>$process_arr[1]])->value('title');                    $item['process'] = [$p1,$p2];                }else{//只有一个工序                    $item['process'] = [];                    //工序类型                    $item['type']=1;                    //工序名称                    $p = $process->where(['id'=>$item['process_id']])->value('title');                    $p = $p == null? "":$p;                    $item['process'] = [$p];                    //halt($item['process']);                }            }            $item['task_title'] = $item['task_title'] == null? "":$item['task_title'];            $item['process_id'] = $item['process_id'] == null? "":$item['process_id'];            //$item['process'] = $item['process'] == null? "":$item['process'];        }        return $list;    }    //新建任务时, 按类型获取胎具    function getMould()    {        //使用中        $list1 = $this->where('status',1)->field(['id','title','status'])->select();        //空闲        $list2 = $this->where('status',2)->field(['id','title','status'])->select();        $data=['using'=>$list1,'freeing'=>$list2];        return $data;    }    //获取胎具列表(用于后台)    function getConsoleList()    {        return $this->field(['id','title','status'])->select();    }    //添加胎具    function addMould($data)    {        return $this->allowField(true)->save($data);    }    //编辑胎具    function edit($data)    {        return $this->allowField(true)->isUpdate(true)->save($data);    }}