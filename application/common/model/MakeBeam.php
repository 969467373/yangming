<?phpnamespace app\common\model;use think\Db;use think\Exception;use think\Session;//制梁通知单class MakeBeam extends BaseModel{    //发布制梁通知单    function addMakeMeam($data)    {        $this->allowField(true)->save($data);        return true;    }    //查看制梁通知单    function lookBeam($data)    {        $ok = $this->alias('mb')            ->join('user u','u.id=mb.user_id')            ->join('task_flow f','f.task_id=mb.task_id','left')            ->where('mb.task_id', $data['task_id'])            ->field([                'mb.id',                'mb.user_id',                'u.name',                'mb.task_id',                'mb.title',                'mb.cross_hole',                'mb.bridge_number',                'mb.bridge_model',                'mb.design_number',                'mb.contact_pillar',                'mb.anchor_prop',                'mb.sound_barrier',                'mb.settlement_marker',                'mb.bearing_type',                'mb.centralized_drainage',                'mb.cable_bridge',                'mb.strap_pattern',                'mb.bearing_fixed',                'mb.pedestal',                'mb.check_status',                'mb.explain',                'mb.create_time',                'mb.check_time',                'f.rebar_id',                'f.beam_id',                'f.quality_id',                'f.lab_id',                'f.machine_id',            ])            ->find();        $leader = Db::name('user')->where('department_id',10)->select();        $ok['leader_name'] = $leader[0]['name'];        return $ok;    }    //审核通知单    function checkTask($data)    {        //修改审核字段        $this->where('id', $data['id'])            ->update([                'check_id'=>$data['user_id'],                'check_status'=>$data['check_status'],                'explain'=>$data['explain'],                'check_time'=>time(),            ]);        return true;    }    //修改制梁通知单    function editMakeMeam($data)    {        //审核状态重新改为0        $data['check_status'] = 0;        $this->allowField(true)->isUpdate(true)->save($data);        return true;    }    //发布浇筑指令,获取参数    function getItem($task_id)    {        $data = $this->alias('mb')            ->join('user u','u.id=mb.user_id')            ->join('task_flow f','f.task_id=mb.task_id')            ->where('mb.task_id',$task_id)            ->field([                'mb.title as project_name',                'mb.user_id',                'u.name as field_technician',                'f.beam_id',            ])            ->find();        $data['live_cargo'] = Db::name('user')->where('id',$data['beam_id'])->value('name');        return $data;    }    //获取任务列表(后台使用)    function getConsoleTask($where,$order)    {        $list = $this->alias('mb')            ->join('task_flow f','f.task_id=mb.task_id')            ->join('user u','u.id=f.technologist_id','left')            ->field([                'mb.task_id',                'mb.title',                'f.technologist_id',                'u.name',                'f.status',                'f.create_time',                'f.finish_time',            ])            ->where($where)            ->order($order)            ->paginate(20, false, ['query' => request()->param()]);        foreach ($list as &$item)        {            //已用时间            if ($item['status'] == 2){//已完成的任务                $seconds = $item['finish_time'] - $item['create_time'];                $item['used_time'] = $this->changeTimeType($seconds);            }else{                $seconds = time()-$item['create_time'];                $item['used_time'] = $this->changeTimeType($seconds);            }            //返工次数            $item['return_num'] = Db::name('task_process')                ->where(['task_id'=>$item['task_id'],'return_status'=>1])                ->count();            //超时次数            $item['overtime_num'] = Db::name('task_process')                ->where(['task_id'=>$item['task_id'],'overtime_status'=>1])                ->count();        }        return $list;    }    //秒换算成时分秒    function changeTimeType($seconds){        if ($seconds >3600){            $hours =intval($seconds/3600);            $minutes = $seconds % 3600;            $time = $hours.":".gmstrftime('%M:%S',$minutes);        }else{            $time = gmstrftime('%H:%M:%S',$seconds);        }        return$time;    }}