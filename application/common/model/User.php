<?phpnamespace app\common\model;use think\Exception;use think\Session;//用户class User extends BaseModel{    //用户列表(后台使用)    function getConsoleList($where)    {        $list = $this->alias('u')            ->join('department d','u.department_id=d.id')            ->field([                'u.*',                'd.title',            ])            ->where($where)            ->paginate(20, false, ['query' => request()->get()]);        return $list;    }    public function setPasswordAttr($value, $data)    {        //密码哈希加密        return password_hash($value, PASSWORD_DEFAULT);    }    //添加用户(用于后台)    function add($data)    {        $this->allowField(true)->save($data);    }    //编辑用户(用于后台)    function edit($data)    {        if(empty($data['pass']))            unset($data['pass']);        $this->allowField(true)->isUpdate(true)->save($data);    }    //登录    function login($data)    {        $user = $this->where('username',$data['username'])            ->whereOr('phone',$data['username'])            ->find();        if (!$user)            throw new Exception('该用户尚未注册');        if (!password_verify($data['password'], $user['password']))            throw new Exception('登录失败,密码错误');        return $user;    }    //重置密码    function resetPassword($phone,$password){        $user = $this->where('phone',$phone)->find();        if (!$user)            throw new Exception('该用户尚未注册');        $res = $user->isUpdate(true)->save(['password'=>$password]);        return $res;    }    //修改密码    function changePassword($user_id,$origin_password,$new_password){        $user = $this->where('id',$user_id)->find();        if (!password_verify($origin_password, $user['password']))            throw new Exception('原始密码错误');        $res = $user->isUpdate(true)->save(['password'=>$new_password]);        return $res;    }    //获取用户部门    function getInformation($user_id)    {        $depart = $this->alias('u')            ->join('department d','u.department_id=d.id')            ->field([                'u.name',                'u.phone',                'u.avatar',                'u.department_id',                'd.title'            ])            ->where(['u.id'=>$user_id])            ->find();        return $depart;    }    //修改头像    function changeUserAvatar($data)    {        $this->where('id',$data['user_id'])->setField(['avatar'=>$data['avatar']]);        return true;    }    //获取该部门的所有用户    function getDepartUser($department_id)    {        return $this->where('department_id',$department_id)->field(['id','name'])->select();    }}