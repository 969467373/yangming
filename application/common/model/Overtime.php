<?phpnamespace app\common\model;use think\Cache;use think\Db;use think\Exception;use think\Session;//超时任务class Overtime extends BaseModel{    //获取用户超时任务列表    function getOvertimeList($data,$page=1)    {        $where['o.user_id'] =$data['user_id'];        $where['o.del_status'] =0;//未被删除的        $list = $this->alias('o')            ->join('process p','p.id=o.process_id')            ->join('make_beam mb','mb.task_id = o.task_id')            ->join('user u','u.id = mb.user_id')            ->join('department d','d.id = o.department_id')            ->join('task_process tp','tp.task_id = o.task_id and tp.process_id=o.process_id')            ->field([                'o.id',                'o.user_id',                'o.task_id',                //工序                'o.process_id',                'p.title as process_title',                'tp.process_status',                'tp.confirm_time',                'tp.used_time',                //部门                'o.department_id',                'd.title as department_title',                'o.del_status',                'o.create_time as overtime_create_time',                'mb.user_id as technologist_id',                'u.name as technologist_name',                'mb.title',                'mb.cross_hole',                'mb.bridge_number',                'mb.bridge_model',                'mb.create_time',                'o.duty_id',//负责人            ])            ->where($where)            ->order('o.create_time desc')            ->paginate(6, false, ['page' => $page])->toArray();        //负责人名字        foreach ($list['data'] as &$item){            $item['duty_name'] = Db::name('user')->where('id',$item['duty_id'])->value('name');        }        //超时时间        foreach ($list['data'] as &$item){            //获取工序时长缓存            $cache = Cache::get("{$item['task_id']}_time");            //该工序限制时长(单位:秒)            $duration = $cache[$item['process_id']]['duration'] * 3600;            if($item['process_status']==1){//进行中                //现在的时间, 减本该完成的时间                $item['timeout'] = time() - ($item['confirm_time'] + $duration) ;            }else{//返工未领取,或已完成                //已用时间, 减限制时间                $item['timeout'] = $item['used_time'] - $duration ;            }        }        return $list;    }    //获取用户超时提醒消息列表    function getMessageList($data,$page=1)    {        $list = $this->alias('o')            ->join('process p','p.id=o.process_id')            ->join('make_beam mb','mb.task_id = o.task_id')            ->join('user u','u.id = mb.user_id')            ->join('department d','d.id = o.department_id')            ->field([                'o.id',                'o.user_id',                'o.task_id',                //工序                'o.process_id',                'p.title as process_title',                //部门                'o.department_id',                'd.title as department_title',                'o.create_time as overtime_create_time',                'mb.user_id as technologist_id',                'u.name as technologist_name',                'mb.title',                'mb.cross_hole',                'mb.bridge_number',                'mb.bridge_model',                'mb.create_time',                'o.duty_id',//负责人            ])            ->where('o.user_id',$data['user_id'])            ->order('o.create_time desc')            ->paginate(6, false, ['page' => $page])->toArray();        //负责人名字        foreach ($list['data'] as &$item){            $item['duty_name'] = Db::name('user')->where('id',$item['duty_id'])->value('name');        }        return $list;    }    //删除用户超时记录    function delOvertime($id)    {        //删除状态改为1        $this->where('id',$id)->setField(['del_status'=>1]);    }    //获取用户新超时提醒数量    function getNewOvertime($user_id)    {        $where['read_status'] = 0;        $where['user_id'] = $user_id;        $num = $this->where($where)->count();        return $num;    }    //改变超时提醒阅读状态    function changeStatus($data)    {        $this->where(['user_id'=>$data['user_id']])->setField(['read_status'=>1]);        return true;    }}