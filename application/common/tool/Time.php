<?php/** * Created by PhpStorm. * User: mac * Date: 2017/6/22 * Time: 13:38 */namespace app\common\tool;/** * 时间工具 */class Time{    /**     * 自适应'-或/'连接的时间格式转换成时间戳     * @param $time     * @return false|int     */    static function formatToTimestamp($time){        preg_match('/^[0-9]*$/',$time,$match);        //如果参数本身是时间戳直接返回,非时间戳转换后返回时间戳        return empty($match)? strtotime($time) : $time;    }        //返回微秒时间戳    static function microTimeFloat()    {        list($usec, $sec) = explode(" ", microtime());        return ((float)$usec + (float)$sec);    }     static function secToTime($times){        $result = '00:00:00';        if ($times>0) {            $hour = floor($times/3600);            $minute = floor(($times-3600 * $hour)/60);            $second = floor((($times-3600 * $hour) - 60 * $minute) % 60);            $result = $hour.':'.$minute.':'.$second;        }        return $result;    }    //时分秒转换为秒数     static function timeToSec($times){        $result = 0;        if ($times != "00:00:00") {            $arr_times  = explode(':',$times);            $result = $arr_times[0]*3600+$arr_times[1]*60+$arr_times[2];        }        return $result;    }    //是否在某时段内    static function timeToTime($time,$start,$end)    {        if(!is_int($time))  $time = Time::formatToTimestamp($time);        if(!is_int($start))  $start = Time::formatToTimestamp($start);        if(!is_int($end))  $end = Time::formatToTimestamp($end);        if($time > $start && $time < $end)        {            return true;        }else        {            return false;        }    }}