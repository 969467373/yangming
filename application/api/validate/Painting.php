<?phpnamespace app\api\validate;use app\common\model\User;use app\common\model\TaskFlow;use think\Validate;class Painting extends Validate{    protected $rule = [        'id'=> 'require',        'user_id'=> 'require|checkUserExist|checkUserDepart',        'task_id'=> 'require',        'project_name'=> 'require',        'bridge_number'=> 'require',        'inform_time'=> 'require',        'mudjack_time'=> 'require',        'exposed_length'=> 'require',        'roughing_conditions'=> 'require',        'clear_conditions'=> 'require',        'rebar_conditions'=> 'require',        'template_conditions'=> 'require',        'conclusion'=> 'require',    ];    protected $message = [        'id.require' => '封端通知单id不能为空',        'user_id.require' => '用户id不能为空',        'task_id.require' => '任务id不能为空',        'task_id.unique' => '任务id已存在',        'project_name.require' => '工程名称不能为空',        'bridge_number.require' => '梁号不能为空',        'inform_time.require' => '通知日期不能为空',        'mudjack_time.require' => '压浆日期不能为空',        'exposed_length.require' => '钢绞线外露长度不能为空',        'roughing_conditions.require' => '锚穴凿毛情况不能为空',        'clear_conditions.require' => '锚头清理情况不能为空',        'rebar_conditions.require' => '封锚钢筋安装情况不能为空',        'template_conditions.require' => '模板安装情况不能为空',        'conclusion.require' => '结论不能为空',    ];    protected $scene = [        //发布        'add'=>[            'user_id',            'task_id'=>[                'require',                'unique'=>'painting',            ],            'project_name',            'bridge_number',            'inform_time',            'blocking_time',            'blocking_detail',            'conclusion',        ],        //获取参数        'get'=>[            'user_id',            'task_id',        ],        //获取参数        'look'=>[            'task_id',        ],        //修改        'edit'=>[            'id',            'user_id',            'task_id',            'project_name',            'bridge_number',            'inform_time',            'blocking_time',            'blocking_detail',            'conclusion',        ],    ];    //验证用户id是否存在    protected function checkUserExist($value)    {        $user = new User();        $res = $user->where(['id'=>$value])->value('id');        if (!$res)            return '用户id不存在';        return true;    }    //验证用户部门是否正确    protected function checkUserDepart($value)    {        $user = new User();        $depart = $user->where(['id'=>$value])->value('department_id');        if ($depart != 1)            return '用户无此权限';        return true;    }}