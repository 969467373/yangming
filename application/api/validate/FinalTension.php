<?phpnamespace app\api\validate;use app\common\model\User;use app\common\model\TaskFlow;use think\Validate;class FinalTension extends Validate{    protected $rule = [        'id'=> 'require',        'user_id'=> 'require|checkUserExist|checkUserDepart',        'task_id'=> 'require',        'title'=> 'require',        'serial_number'=> 'require',        'bridge_number'=> 'require',        'produced_time'=> 'require',        'experiment_time'=> 'require',        'vintage'=> 'require',        'design_strength'=> 'require',        'final_strength'=> 'require',        'design_film'=> 'require',        'final_film'=> 'require',        'conclusion'=> 'require',    ];    protected $message = [        'id.require' => '终张拉通知单id不能为空',        'user_id.require' => '用户id不能为空',        'task_id.require' => '任务id不能为空',        'task_id.unique' => '任务id已存在',        'title.require' => '标题不能为空',        'serial_number.require' => '编号不能为空',        'bridge_number.require' => '梁型梁号不能为空',        'produced_time.require' => '生产时间不能为空',        'experiment_time.require' => '实验时间不能为空',        'vintage.require' => '期龄不能为空',        'design_strength.require' => '设计强度不能为空',        'final_strength.require' => '终张强度不能为空',        'design_film.require' => '设计弹膜不能为空',        'final_film.require' => '终张弹膜不能为空',        'conclusion.require' => '结论不能为空',    ];    protected $scene = [        //发布        'add'=>[            'user_id',            'task_id'=>[                'require',                'unique'=>'final_tension',            ],            'title',            //'serial_number',            'bridge_number',            'produced_time',            'experiment_time',            'vintage',            'design_strength',            'final_strength',            'conclusion',            'design_film',            'final_film',        ],        //获取参数        'get'=>[            'user_id',            'task_id',        ],        //获取参数        'look'=>[            'task_id',        ],        //修改        'edit'=>[            'id',            'user_id',            'task_id',            'title',            //'serial_number',            'bridge_number',            'produced_time',            'experiment_time',            'vintage',            'design_strength',            'final_strength',            'conclusion',            'design_film',            'final_film',        ],    ];    //验证用户id是否存在    protected function checkUserExist($value)    {        $user = new User();        $res = $user->where(['id'=>$value])->value('id');        if (!$res)            return '用户id不存在';        return true;    }    //验证用户部门是否正确    protected function checkUserDepart($value)    {        $user = new User();        $depart = $user->where(['id'=>$value])->value('department_id');        if ($depart != 5)            return '用户无此权限';        return true;    }}