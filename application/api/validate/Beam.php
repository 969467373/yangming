<?phpnamespace app\api\validate;use app\common\model\User;use app\common\model\TaskFlow;use think\Validate;class Beam extends Validate{    protected $rule = [        'user_id'=> 'require|checkUserExist|checkUserDepart',        'task_id'=> 'require',        'process_id'=> 'require',    ];    protected $message = [        'user_id.require' => '用户id不能为空',        'task_id.require' => '任务id不能为空',        'process_id.require' => '工序id不能为空',    ];    protected $scene = [        //首次领取任务(模板清理)        'one'=>[            'user_id',            'task_id'=>'require|checkTaskStatus'        ],        //确认任务        'affirm'=>[            'user_id',            'task_id',            'process_id',        ],        //完成任务()        'finish'=>[            'user_id',            'task_id',            'process_id',        ],    ];    //验证用户id是否存在    protected function checkUserExist($value)    {        $user = new User();        $res = $user->where(['id'=>$value])->value('id');        if (!$res)            return '用户id不存在';        return true;    }    //验证用户部门是否正确    protected function checkUserDepart($value)    {        $user = new User();        $depart = $user->where(['id'=>$value])->value('department_id');        if ($depart != 3)            return '用户无此权限';        return true;    }    //验证任务是否被领取    protected function checkTaskStatus($value)    {        $model = new TaskFlow();        $beam_id = $model->where(['task_id'=>$value])->value('beam_id');        if ($beam_id != 0)            return '该任务已被领取';        return true;    }}