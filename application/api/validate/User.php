<?phpnamespace app\api\validate;use app\common\model\User as UserModel;use think\Validate;class User extends Validate{    protected $rule = [        'user_id'=> 'require|checkUserExist',        //改密码        'origin_password' => 'require|alphaNum',        'new_password' => 'require|alphaNum|different:origin_password',        'confirm_new_password' => 'require|confirm:new_password',        //改头像        'avatar',    ];    protected $message = [        'user_id.require' => '用户id不能为空',        //改密码        'origin_password.require' => '原密码不能为空',        'origin_password.alphaNum' => '原密码只能为字母和数字',        'new_password.require' => '新密码不能为空',        'new_password.alphaNum' => '新密码只能为字母和数字',        'new_password.different' => '新密码和原密码不能相同',        'confirm_new_password.require' => '确认密码不能为空',        'confirm_new_password.confirm' => '两次输入的密码不一致',        //改头像        'avatar.require' => '头像不能为空',    ];    protected $scene = [        //查询资料        'getInformation'=>[            'user_id'        ],        //修改密码        'changePassword'=>[            'user_id',            'origin_password',            'new_password',            'confirm_new_password'        ],        //修改头像        'changeAvatar'=>[            'user_id',            'avatar',        ],    ];    //验证用户id是否存在    protected function checkUserExist($value)    {        $user = new UserModel();        $res = $user->where(['id'=>$value])->value('id');        if (!$res)            return '用户id不存在';        return true;    }}